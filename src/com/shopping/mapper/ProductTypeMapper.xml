<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shopping.dao.ProductTypeDao">

	<resultMap type="ProductType" id="BaseResultMap">
		<id column="productTypeId" property="productTypeId" />
		<result column="productTypeName" property="productTypeName" />
		<result column="price" property="price" />
		<result column="salePrice" property="salePrice" />
		<result column="restQuantity" property="restQuantity" />
		<result column="productTypeImagePath" property="productTypeImagePath" />
		<result column="productTypeCreateDate" property="productTypeCreateDate" />
	</resultMap>

	<resultMap type="ProductType" id="FullResultMap" extends="BaseResultMap">
		<association property="product" resultMap="com.shopping.dao.ProductDao.BaseResultMap" />
	</resultMap>

	<resultMap type="ProductType" id="SuperResultMap" extends="BaseResultMap">
		<association property="product" resultMap="com.shopping.dao.ProductDao.SuperResultMap" />
	</resultMap>
	
	<select id = "getProductCountByProductId" resultType = "Integer">
		select count(1) from productType where productId = #{id}
	</select>
	
	<sql id="pt_searchCondition">
		<where>
			<if test = "ptF.productTypeName != null and ptF.productTypeName != ''">
				and pt.productTypeName like concat ('%',#{ptF.productTypeName},'%')
			</if>
			<if test = "ptF.salePrice != null and ptL.salePrice != null">
				and (pt.salePrice between #{ptF.salePrice} and #{ptL.salePrice}) or (pt.price between #{ptF.salePrice}
				and #{ptL.salePrice})
			</if>
			<if test = "ptF.restQuantity != null and ptL.restQuantity != null">
				and pt.restQuantity between #{ptF.restQuantity} and #{ptL.restQuantity}
			</if>
			
			<if test = "ptF.product.productId != null">
				and pt.productId = #{ptF.product.productId}
			</if>
		</where>
	</sql>
	
	<select id = "getProductTypesByProductId" resultType = "Map">
		select pt.*,p.productName from productType pt
		inner join product p on p.productId = pt.productId
		<include refid="pt_searchCondition" />
		order by pt.productId asc
		
		limit #{page.firstIndex},#{page.pageSize}
	</select>
	
	<select id = "getCountByProductId" resultType = "Integer" >
		select count(1) from productType pt
		<include refid="pt_searchCondition" />
	</select>
	
	<insert id = "addProductType">
		insert into productType values (null,#{product.productId},#{productTypeName},
		#{price},#{salePrice},#{restQuantity},#{productTypeImagePath},now())
	</insert>
	
	<update id = "updateProductType">
		update productType set productTypeName = #{productTypeName},
		price = #{price},salePrice = #{salePrice},restQuantity = #{restQuantity},productTypeImagePath = #{productTypeImagePath}
		where productTypeId = #{productTypeId}
	</update>
	
	<delete id = "deleteProductType">
		delete from productType where productTypeId = #{productTypeId}
	</delete>
	
	<delete id = "deleteProductTypeByProductId">
		delete from productType where productId = #{productId}
	</delete>
</mapper>